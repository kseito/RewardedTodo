import dependencies.Libraries

plugins {
    alias(libs.plugins.compose.compiler)
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco'

apply from: rootProject.file('gradle/android_common.gradle')

android {
    buildFeatures {
        dataBinding = true
    }
    namespace 'jp.kztproject.rewardedtodo.feature.todo'

    testOptions {
        unitTests.all {
            it.useJUnitPlatform()
        }
    }
}

dependencies {
    //TODO need to reverse dependencies when todo module separate application layer and domain layer
    implementation project(path: ':application:todo')
    implementation project(path: ':domain:todo')
    implementation project(path: ':common:ui')

    implementation libs.kotlin.stdlib
    implementation libs.core.ktx
    implementation libs.fragment.ktx
    implementation libs.material

    // Jetpack Compose
    implementation(platform(libs.androidx.compose.bom))
    implementation libs.activity.compose
    implementation libs.androidx.compose.foundation
    implementation libs.androidx.compose.material
    implementation(libs.compose.material.icon.core)
    implementation libs.androidx.compose.ui
    implementation libs.androidx.compose.ui.tooling
    implementation libs.androidx.compose.livedata
    implementation libs.constraintlayout.compose
    implementation libs.hilt.navigation.compose

    testImplementation Libraries.Test.junit
    testImplementation Libraries.Test.kotest
    testImplementation Libraries.Google.truth
    testImplementation Libraries.Test.mockk
    androidTestImplementation Libraries.Test.AndroidX.junit
    androidTestImplementation Libraries.Test.AndroidX.espresso
    implementation Libraries.AndroidX.LifeCycle.livedataKtx
    implementation Libraries.AndroidX.LifeCycle.viewModelKtx
    implementation Libraries.AndroidX.LifeCycle.runtimeCompose
    testImplementation libs.coroutines.test

    //Dagger
    implementation(libs.hilt.android)
    kapt(libs.hilt.compiler)
}
