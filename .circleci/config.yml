version: 2.1

executors:
  android:
    docker:
      - image: cimg/android:2025.04
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    environment:
      JAVA_OPTS: -Xmx3584m
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx3584m -XX:+HeapDumpOnOutOfMemoryError" -Dorg.gradle.daemon=false -Dorg.gradle.parallel=false'
    resource_class: large

jobs:
  build:
    executor: android
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - run:
          name: Run Tests
          command: |
            ./gradlew testDebugUnitTest
      - run:
          name: Static Code Analytics
          command: |
            ./gradlew lintDebug
  deploy-to-deploygate:
    executor: android
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - run:
          name: Deploy to deploygate
          command: |
            echo $ENCODED_STORE_FILE | base64 -d > staging.keystore
            ./gradlew uploadDeployGateStaging

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          filters:
            branches:
              only:
                - /feature\/.*/
                - /renovate\/.*/
  deploy-to-staging:
    jobs:
      - deploy-to-deploygate:
          filters:
            branches:
              only:
                - /stg-release\/.*/
