import dependencies.GradlePlugins

buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath libs.android.gradle.plugin
        classpath GradlePlugins.kotlin
        classpath GradlePlugins.navigation_safe_args
        classpath GradlePlugins.dagger_hilt
        classpath GradlePlugins.ktlint
        classpath GradlePlugins.deploy_gate
    }
}

plugins {
    alias libs.plugins.compose.compiler apply false
    alias libs.plugins.ksp apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'jacoco'
jacoco {
    toolVersion = "0.8.12"
}
task jacocoMergeReports(type: JacocoReport) {
    group = 'Reporting'
    description = "Merge all JaCoCo reports from projects into one."

    gradle.afterProject { p, state ->
        if (p.rootProject != p && p.plugins.hasPlugin('jacoco')) {
            dependsOn "${p.path}:testDebugUnitTest"
            executionData "${p.buildDir}/jacoco/testDebugUnitTest.exec"
        }
    }
}

task jacocoTestReports(type: JacocoReport, dependsOn: 'jacocoMergeReports') {
    group = 'Reporting'
    description = "Generate Jacoco coverage reports for the build. Only unit tests."

    executionData jacocoMergeReports.executionData

    gradle.afterProject { p, state ->
        if (p.rootProject != p && p.plugins.hasPlugin('jacoco')) {
            classDirectories.from(files([
                    fileTree(dir: "${p.buildDir}/tmp/kotlin-classes/debug")
            ]))
            sourceDirectories.from(files([
                    "${p.buildDir}/src/main/java"
            ]))
        }
    }

    reports {
        xml.required.set(true)
        html.required.set(true)
        csv.required.set(false)

        xml.destination file("${layout.buildDirectory.get()}/reports/jacoco/report.xml")
        html.destination file("${layout.buildDirectory.get()}/reports/jacoco/html")
    }
}
